doctype html
html(lang="ko")
    head
        meta(charset="UTF-8")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        link(rel="stylesheet" href="/css/users/profile.css")
        title=pageTitle + " - 회원 정보"
    body
        div(id="content")  
            div(id="top")
                a(id="main_link" href="/")
                    h1 To Do
            h2(id="join_text") 회원 정보
            div(id="main")
                div(class="row")
                    div(class="profile_label_area")
                        label(for="user_img") 회원 사진
                    div(class="profile_area" id="user_img_area")
                        if userimg
                            img(name="user_img" id="user_img" src="/data/uploads/img/" + userimg style="width: 50px; height: 50px")
                        form(id="upload" action="profile" method="post")
                            input(type="file" id="upload_img" name="uploaded_file" accept=".png, .jpg, .jpeg" hidden)
                        button(type="button" id="edit_userimg_btn" onclick="uploadImg();") 변경
                        button(type="button" id="to_default_img_btn" onclick="toDefaultImg();" ) 삭제
                div(class="sidebar")
                div(class="row")
                    div(class="profile_label_area")
                        label(for="username") 아이디
                    div(class="profile_area" id="id_area")
                        a(name="username" id="username")=username
                div(class="sidebar")
                div(class="row")
                    div(class="profile_label_area")
                        label(for="pswd1") 비밀번호
                    div(class="profile_area" id="edit_pswd_area")
                        button(type="button" id="edit_pswd_btn" onclick="location.href='/users/profile/edit/password';") 변경
                div(class="sidebar")
                div(class="row")
                    div(class="profile_label_area")
                        label(for="email") 이메일
                    div(class="profile_area" id="edit_email_area")
                        a(type="email" name="email" id="email")=email
                        button(type="button" id="edit_email_btn" onclick="location.href='/users/profile/edit/email';") 변경
                div(class="sidebar")
                div(class="row")
                    div(id="return_btn_area")
                        button(type="button" id="return_btn" onclick="location.href='/';") 확인
    include ./script/default_img.pug
    script.
        function uploadImg() {
            document.getElementById("upload_img").click();
        }

        function toDefaultImg() {
            const xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    location.reload();
                } else if (this.readyState == 4 && this.status == 400) {
                    alert("회원 이미지 삭제에 실패 하였습니다.");
                }
            }
            xhr.open("delete", "/users/profile/img", true);
            xhr.send();
        }

        document.getElementById("upload_img").onchange = async function () {
            let file = this.files[0]; 
            let img = new Image();
            img.src = URL.createObjectURL(file);

            let reader = new FileReader();

            reader.onload = function(e) {

            }

            if(this.files) {
                await img.decode();
                const IMG_WIDTH = 50;
                const IMG_HEIGHT = 50;
                let canvas = document.createElement("canvas");
                let context =  canvas.getContext("2d");

                console.log(this.files[0]);
                context.drawImage(img, 0, 0);
                canvas.width = IMG_WIDTH;
                canvas.height = IMG_WIDTH;

                context.save();
                context.beginPath();
                context.arc(25, 25, 25, 0, Math.PI * 2, true);
                context.closePath();
                context.clip();
                context.drawImage(img, 0, 0, IMG_WIDTH, IMG_WIDTH);

                canvas.toBlob((blob) => {
                    const formData = new FormData();
                    formData.append('uploaded_file', blob, 'user_img.jpeg');
                    const xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function() {
                        if (this.readyState == 4 && this.status == 200) {
                            location.reload();
                        } else if (this.readyState == 4 && this.status == 400) {
                            alert("알수 없는 오류로 인하여 업로드 실패했습니다.");
                        }
                    }
                    xhr.open("post", "/users/profile", true);
                    xhr.send(formData);
                });
        }}